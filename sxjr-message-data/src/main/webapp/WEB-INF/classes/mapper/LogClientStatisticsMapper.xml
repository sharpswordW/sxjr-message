<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxjr.message.dao.LogClientStatisticsMapper" >
  <resultMap id="BaseResultMap" type="com.sxjr.message.model.LogClientStatistics" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="startDate" property="startdate" jdbcType="TIMESTAMP" />
    <result column="endDate" property="enddate" jdbcType="TIMESTAMP" />
    <result column="smsCount" property="smscount" jdbcType="INTEGER" />
    <result column="successCount" property="successcount" jdbcType="INTEGER" />
    <result column="errorCount" property="errorcount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, startDate, endDate, smsCount, successCount, errorCount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from log_clientstatistics
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log_clientstatistics
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxjr.message.model.LogClientStatistics" >
    insert into log_clientstatistics (Id, startDate, endDate, 
      smsCount, successCount, errorCount
      )
    values (#{id,jdbcType=INTEGER}, #{startdate,jdbcType=TIMESTAMP}, #{enddate,jdbcType=TIMESTAMP}, 
      #{smscount,jdbcType=INTEGER}, #{successcount,jdbcType=INTEGER}, #{errorcount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sxjr.message.model.LogClientStatistics" >
    insert into log_clientstatistics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="enddate != null" >
        endDate,
      </if>
      <if test="smscount != null" >
        smsCount,
      </if>
      <if test="successcount != null" >
        successCount,
      </if>
      <if test="errorcount != null" >
        errorCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null" >
        #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="smscount != null" >
        #{smscount,jdbcType=INTEGER},
      </if>
      <if test="successcount != null" >
        #{successcount,jdbcType=INTEGER},
      </if>
      <if test="errorcount != null" >
        #{errorcount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxjr.message.model.LogClientStatistics" >
    update log_clientstatistics
    <set >
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null" >
        endDate = #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="smscount != null" >
        smsCount = #{smscount,jdbcType=INTEGER},
      </if>
      <if test="successcount != null" >
        successCount = #{successcount,jdbcType=INTEGER},
      </if>
      <if test="errorcount != null" >
        errorCount = #{errorcount,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxjr.message.model.LogClientStatistics" >
    update log_clientstatistics
    set startDate = #{startdate,jdbcType=TIMESTAMP},
      endDate = #{enddate,jdbcType=TIMESTAMP},
      smsCount = #{smscount,jdbcType=INTEGER},
      successCount = #{successcount,jdbcType=INTEGER},
      errorCount = #{errorcount,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>