<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxjr.message.dao.SmsTemplateMapper" >
  <resultMap id="BaseResultMap" type="com.sxjr.message.model.SmsTemplate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="clientId" property="clientid" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="createBy" property="createby" jdbcType="VARCHAR" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content, clientId, createDate, state, createBy, updateDate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sms_template
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sms_template
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxjr.message.model.SmsTemplate" >
    insert into sms_template (id, content, clientId, 
      createDate, state, createBy, 
      updateDate)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{clientid,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{state,jdbcType=CHAR}, #{createby,jdbcType=VARCHAR}, 
      #{updatedate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sxjr.message.model.SmsTemplate" >
    insert into sms_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="clientid != null" >
        clientId,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createby != null" >
        createBy,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="clientid != null" >
        #{clientid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxjr.message.model.SmsTemplate" >
    update sms_template
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="clientid != null" >
        clientId = #{clientid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="createby != null" >
        createBy = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxjr.message.model.SmsTemplate" >
    update sms_template
    set content = #{content,jdbcType=VARCHAR},
      clientId = #{clientid,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR},
      createBy = #{createby,jdbcType=VARCHAR},
      updateDate = #{updatedate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>