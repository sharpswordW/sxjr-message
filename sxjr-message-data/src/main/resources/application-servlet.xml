<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"   
       xmlns:aop="http://www.springframework.org/schema/aop"   
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"   
       xmlns:tx="http://www.springframework.org/schema/tx"   
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
  
    <!-- scan the package and the sub package -->
    <context:component-scan base-package="com.sxjr.sms.*" /> 
    
    
 
    <!-- 获取properties配置文件 --> 
    <!-- <context:property-placeholder location="classpath:config.properties"/> -->
    <context:property-placeholder location="classpath:conf_db.properties" ignore-unresolvable="true" /> 
     <context:property-placeholder location="classpath:conf_redis.properties" ignore-unresolvable="true" /> 
    
    <!-- 获取数据源 -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
       <property name="driverClassName">  
           <value>${jdbc.driverClass}</value>  
       </property>  
       <property name="url">  
           <value>${jdbc.url}</value>  
       </property>  
       <property name="username">  
           <value>${jdbc.username}</value>  
       </property>  
       <property name="password">  
           <value>${jdbc.password}</value>  
       </property>  
    </bean>
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	 <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.sxjr.sms.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>   
    </bean>  
    
    <!--redis-->
    <bean id="jedisPoolConfig"  class="redis.clients.jedis.JedisPoolConfig"  >
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <bean id="jedisConnectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  >
        <property  name="hostName" value="${redis.ip}" />
        <property name="port"  value="${redis.port}" />
        <property  name="poolConfig" ref="jedisPoolConfig" />
        <property name="password" value="${redis.password}"></property>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <bean id="redisUtil" class="com.sxjr.common.util.RedisUtil" >
        <property name="redisTemplate" ref="redisTemplate" />
    </bean >
 
    <!--AOP 设置-->
    <aop:aspectj-autoproxy/>

    <aop:config>
        <aop:pointcut id="appService" expression="execution(* com.sxjr.sms.service..*Service*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="appService"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans> 