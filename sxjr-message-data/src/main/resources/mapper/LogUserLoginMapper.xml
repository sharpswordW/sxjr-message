<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxjr.message.dao.LogUserLoginMapper" >
  <resultMap id="BaseResultMap" type="com.sxjr.message.model.LogUserLogin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="credential" property="credential" jdbcType="VARCHAR" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="VARCHAR" />
    <result column="success" property="success" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, credential, info, ip, loginTime, success, userId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from log_userlogin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log_userlogin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxjr.message.model.LogUserLogin" >
    insert into log_userlogin (id, credential, info, 
      ip, loginTime, success, 
      userId)
    values (#{id,jdbcType=INTEGER}, #{credential,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{logintime,jdbcType=VARCHAR}, #{success,jdbcType=VARCHAR}, 
      #{userid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sxjr.message.model.LogUserLogin" >
    insert into log_userlogin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="credential != null" >
        credential,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="success != null" >
        success,
      </if>
      <if test="userid != null" >
        userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="credential != null" >
        #{credential,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="success != null" >
        #{success,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxjr.message.model.LogUserLogin" >
    update log_userlogin
    <set >
      <if test="credential != null" >
        credential = #{credential,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="success != null" >
        success = #{success,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxjr.message.model.LogUserLogin" >
    update log_userlogin
    set credential = #{credential,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=VARCHAR},
      success = #{success,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>